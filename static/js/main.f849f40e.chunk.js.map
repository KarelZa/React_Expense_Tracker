{"version":3,"sources":["components/NewExpense/ExpenseForm.module.css","components/Expenses/ExpenseDate.module.css","components/Chart/ChartBar.module.css","components/Expenses/ExpenseItem.module.css","components/Expenses/ExpensesFilter.module.css","components/Expenses/ExpenseList.module.css","components/UI/Card.module.css","components/Expenses/Expenses.module.css","components/Chart/Chart.module.css","components/NewExpense/NewExpense.module.css","components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpenseList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["module","exports","Card","props","classes","styles","className","children","ExpenseFilter","onChange","event","onSelectYearData","target","value","defaultSelectedYear","ExpenseDate","month","date","toLocaleString","day","year","ExpenseItem","title","amount","ExpenseList","items","length","map","item","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMax","max","chart","ExpensesChart","chartDataPoints","expenses","expense","getMonth","Expenses","useState","filteredYear","setFilteredYear","filteredExpenses","filter","getFullYear","toString","selectedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Number","Date","onSaveExpenseData","type","min","step","onClick","onCancel","NewExpense","toggleForm","setToggleForm","displayFormHandler","prevState","enteredExpenseData","random","onAddExpense","INNITIAL_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f849f40e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"new-expense__controls\":\"ExpenseForm_new-expense__controls__joARX\",\"new-expense__control\":\"ExpenseForm_new-expense__control__399CU\",\"new-expense__actions\":\"ExpenseForm_new-expense__actions__oMdI5\",\"invalid\":\"ExpenseForm_invalid__3PgSZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"expense-date\":\"ExpenseDate_expense-date__1KU7C\",\"expense-date__month\":\"ExpenseDate_expense-date__month__M-pjR\",\"expense-date__year\":\"ExpenseDate_expense-date__year__2imAS\",\"expense-date__day\":\"ExpenseDate_expense-date__day__212Q-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chart-bar\":\"ChartBar_chart-bar__nO8ZE\",\"chart-bar__inner\":\"ChartBar_chart-bar__inner__1kJW9\",\"chart-bar__fill\":\"ChartBar_chart-bar__fill__1EBbE\",\"chart-bar__label\":\"ChartBar_chart-bar__label__3iDVA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"expense-item\":\"ExpenseItem_expense-item__Fir92\",\"expense-item__description\":\"ExpenseItem_expense-item__description__n6mX8\",\"expense-item__price\":\"ExpenseItem_expense-item__price__1xAhA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"expenses-filter\":\"ExpensesFilter_expenses-filter__2qNGF\",\"expenses-filter__control\":\"ExpensesFilter_expenses-filter__control__2iuEC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"expenses-list\":\"ExpenseList_expenses-list__eNFA1\",\"expenses-list__fallback\":\"ExpenseList_expenses-list__fallback__24ilQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1EjQ6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"expenses\":\"Expenses_expenses__1PgVu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chart\":\"Chart_chart__1Cbj3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"new-expense\":\"NewExpense_new-expense__2HlbK\"};","import styles from './Card.module.css';\r\n\r\n// Card Wrapper(container) component - that generalize css look for components that will be wrapped inside it\r\nexport default function Card(props) {\r\n\tconst classes = styles['card'] + ' ' + props.className;\r\n\treturn <div className={classes}>{props.children}</div>;\r\n}\r\n","import React from 'react';\r\nimport styles from './ExpensesFilter.module.css';\r\n\r\nexport default function ExpenseFilter(props) {\r\n\t// Helper function that changes selected Year, and passing data to parent component\r\n\tconst selectChangeHandler = (event) => {\r\n\t\tprops.onSelectYearData(event.target.value);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className={styles['expenses-filter']}>\r\n\t\t\t<div className={styles['expenses-filter__control']}>\r\n\t\t\t\t<label>Filter by year</label>\r\n\t\t\t\t<select onChange={selectChangeHandler} value={props.defaultSelectedYear}>\r\n\t\t\t\t\t<option value='2022'>2022</option>\r\n\t\t\t\t\t<option value='2021'>2021</option>\r\n\t\t\t\t\t<option value='2020'>2020</option>\r\n\t\t\t\t\t<option value='2019'>2019</option>\r\n\t\t\t\t</select>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import styles from './ExpenseDate.module.css';\r\n\r\nexport default function ExpenseDate(props) {\r\n\t// Helper Variables\r\n\tconst month = props.date.toLocaleString('en-GB', { month: 'short' });\r\n\tconst day = props.date.toLocaleString('en-GB', { day: 'numeric' });\r\n\tconst year = props.date.toLocaleString('en-GB', { year: 'numeric' });\r\n\t//const year = props.date.getFullYear(); // Another method how to get fullYear\r\n\treturn (\r\n\t\t<div className={styles['expense-date']}>\r\n\t\t\t<div className={styles['expense-date__month']}>{month}</div>\r\n\t\t\t<div className={styles['expense-date__year']}>{year}</div>\r\n\t\t\t<div className={styles['expense-date__day']}>{day}</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import styles from './ExpenseItem.module.css';\r\nimport ExpenseDate from './ExpenseDate';\r\nimport Card from '../UI/Card';\r\nimport React from 'react';\r\n\r\nfunction ExpenseItem(props) {\r\n\treturn (\r\n\t\t<li>\r\n\t\t\t<Card className={styles['expense-item']}>\r\n\t\t\t\t<ExpenseDate date={props.date} /> {/* passing date from props to ExpenseDate component */}\r\n\t\t\t\t<div className={styles['expense-item__description']}>\r\n\t\t\t\t\t<h2>{props.title}</h2>\r\n\t\t\t\t\t<div className={styles['expense-item__price']}>€{props.amount}</div>\r\n\t\t\t\t</div>\r\n\t\t\t</Card>\r\n\t\t</li>\r\n\t);\r\n}\r\n\r\nexport default ExpenseItem;\r\n","import React from 'react';\r\nimport ExpenseItem from './ExpenseItem';\r\nimport styles from './ExpenseList.module.css';\r\n\r\nexport default function ExpenseList(props) {\r\n\t// Returning Component based on condition\r\n\tif (props.items.length === 0) {\r\n\t\treturn <h2 className={styles['expenses-list__fallback']}>No Expenses has been found.</h2>;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<ul className={styles['expenses-list']}>\r\n\t\t\t{props.items.map((item) => (\r\n\t\t\t\t<ExpenseItem key={item.id} title={item.title} amount={item.amount} date={item.date} />\r\n\t\t\t))}\r\n\t\t</ul>\r\n\t);\r\n}\r\n","import React from 'react';\r\nimport styles from './ChartBar.module.css';\r\n\r\nexport default function ChartBar(props) {\r\n\tlet barFillHeight = '0%'; // for css height style\r\n\r\n\tif (props.maxValue > 0) {\r\n\t\tbarFillHeight = Math.round((props.value / props.maxValue) * 100) + '%'; // Calculation of the filling inside bar\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={styles['chart-bar']}>\r\n\t\t\t<div className={styles['chart-bar__inner']}>\r\n\t\t\t\t<div className={styles['chart-bar__fill']} style={{ height: barFillHeight }}></div>\r\n\t\t\t</div>\r\n\t\t\t<div className={styles['chart-bar__label']}>{props.label}</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React from 'react';\r\nimport styles from './Chart.module.css';\r\nimport ChartBar from './ChartBar';\r\n\r\nexport default function Chart(props) {\r\n\tconst dataPointValues = props.dataPoints.map((dataPoint) => dataPoint.value); // Storing only values from dataPoints Array of objects\r\n\tconst totalMax = Math.max(...dataPointValues); // Searching for the highest value\r\n\r\n\treturn (\r\n\t\t<div className={styles.chart}>\r\n\t\t\t{props.dataPoints.map((dataPoint) => (\r\n\t\t\t\t<ChartBar key={dataPoint.label} value={dataPoint.value} maxValue={totalMax} label={dataPoint.label} />\r\n\t\t\t))}\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React from 'react';\r\nimport Chart from '../Chart/Chart';\r\n\r\nexport default function ExpensesChart(props) {\r\n\tconst chartDataPoints = [\r\n\t\t{\r\n\t\t\tlabel: 'Jan',\r\n\t\t\tvalue: 0,\r\n\t\t},\r\n\t\t{\r\n\t\t\tlabel: 'Feb',\r\n\t\t\tvalue: 0,\r\n\t\t},\r\n\t\t{\r\n\t\t\tlabel: 'Mar',\r\n\t\t\tvalue: 0,\r\n\t\t},\r\n\t\t{\r\n\t\t\tlabel: 'Apr',\r\n\t\t\tvalue: 0,\r\n\t\t},\r\n\t\t{\r\n\t\t\tlabel: 'May',\r\n\t\t\tvalue: 0,\r\n\t\t},\r\n\t\t{\r\n\t\t\tlabel: 'Jun',\r\n\t\t\tvalue: 0,\r\n\t\t},\r\n\t\t{\r\n\t\t\tlabel: 'Jul',\r\n\t\t\tvalue: 0,\r\n\t\t},\r\n\t\t{\r\n\t\t\tlabel: 'Aug',\r\n\t\t\tvalue: 0,\r\n\t\t},\r\n\t\t{\r\n\t\t\tlabel: 'Sep',\r\n\t\t\tvalue: 0,\r\n\t\t},\r\n\t\t{\r\n\t\t\tlabel: 'Oct',\r\n\t\t\tvalue: 0,\r\n\t\t},\r\n\t\t{\r\n\t\t\tlabel: 'Nov',\r\n\t\t\tvalue: 0,\r\n\t\t},\r\n\t\t{\r\n\t\t\tlabel: 'Dec',\r\n\t\t\tvalue: 0,\r\n\t\t},\r\n\t];\r\n\r\n\tfor (const expense of props.expenses) {\r\n\t\tconst expenseMonth = expense.date.getMonth(); // Getting a month --> getMonth(returns month starting at 0)\r\n\t\tchartDataPoints[expenseMonth].value += expense.amount; // chartDataPoint[num of the month] will sum all the amount of expenses\r\n\t}\r\n\r\n\treturn <Chart dataPoints={chartDataPoints} />;\r\n}\r\n","// Imports\r\nimport React, { useState } from 'react';\r\nimport Card from '../UI/Card';\r\nimport ExpenseFilter from './ExpensesFilter';\r\nimport styles from './Expenses.module.css';\r\nimport ExpenseList from './ExpenseList';\r\nimport ExpensesChart from './ExpensesChart';\r\n\r\nexport default function Expenses(props) {\r\n\tconst [filteredYear, setFilteredYear] = useState('2021');\r\n\tconst filteredExpenses = props.items.filter((item) => item.date.getFullYear().toString() === filteredYear); // Creating a new array based on filtered Year\r\n\r\n\t// Helper function that updates filteredYear state , based on selected data from ExpenseFilter component\r\n\tconst selectYearDataHandler = (selectedYear) => {\r\n\t\tsetFilteredYear(selectedYear);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Card className={styles.expenses}>\r\n\t\t\t\t{/*defaultSelectedYear setting default Value in filter, onSelectYearData --> getting currently selected year data */}\r\n\t\t\t\t<ExpenseFilter defaultSelectedYear={filteredYear} onSelectYearData={selectYearDataHandler} />\r\n\t\t\t\t<ExpensesChart expenses={filteredExpenses} />\r\n\t\t\t\t{/* Passing filteredExpenses array */}\r\n\t\t\t\t<ExpenseList items={filteredExpenses} />\r\n\t\t\t</Card>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React, { useState } from 'react';\r\nimport styles from './ExpenseForm.module.css';\r\n\r\nexport default function ExpenseForm(props) {\r\n\tconst [enteredTitle, setEnteredTitle] = useState('');\r\n\tconst [enteredAmount, setEnteredAmount] = useState('');\r\n\tconst [enteredDate, setEnteredDate] = useState('');\r\n\r\n\t// Helper function that stores entered title text into state(enteredTitle)\r\n\tconst titleChangeHandler = (event) => {\r\n\t\tsetEnteredTitle(event.target.value);\r\n\t};\r\n\t// Helper function that stores entered Amount into state\r\n\tconst amountChangeHandler = (event) => {\r\n\t\tsetEnteredAmount(event.target.value);\r\n\t};\r\n\t// Helper function that stores entered Date into state\r\n\tconst dateChangeHandler = (event) => {\r\n\t\tsetEnteredDate(event.target.value);\r\n\t};\r\n\r\n\tconst submitHandler = (event) => {\r\n\t\tevent.preventDefault(); // Prevents reload of the page , when request is sent\r\n\t\t// Stores all the seperate states into one object\r\n\t\tconst expenseData = {\r\n\t\t\ttitle: enteredTitle,\r\n\t\t\tamount: Number(enteredAmount),\r\n\t\t\tdate: new Date(enteredDate), // Converts String into Date format\r\n\t\t};\r\n\t\t// Passing data object to upper level component (-->NewExpense.js)\r\n\t\t// onSaveExpenseData will Now call saveExpenseDataHandler() , defined in NewExpense.js\r\n\t\tprops.onSaveExpenseData(expenseData);\r\n\t\t// Resets Input fields\r\n\t\tsetEnteredTitle('');\r\n\t\tsetEnteredAmount('');\r\n\t\tsetEnteredDate('');\r\n\t};\r\n\r\n\treturn (\r\n\t\t<form onSubmit={submitHandler}>\r\n\t\t\t<div className={styles['new-expense__controls']}>\r\n\t\t\t\t<div className={styles['new-expense__control']}>\r\n\t\t\t\t\t<label>Title</label>\r\n\t\t\t\t\t<input type='text' value={enteredTitle} onChange={titleChangeHandler} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={styles['new-expense__control']}>\r\n\t\t\t\t\t<label>Amount</label>\r\n\t\t\t\t\t<input type='number' value={enteredAmount} min='0.01' step='0.01' onChange={amountChangeHandler} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={styles['new-expense__control']}>\r\n\t\t\t\t\t<label>Date</label>\r\n\t\t\t\t\t<input type='date' value={enteredDate} min='2019-01-01' max='2022-12-31' onChange={dateChangeHandler} />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className={styles['new-expense__actions']}>\r\n\t\t\t\t<button type='button' onClick={props.onCancel}>\r\n\t\t\t\t\tCancel\r\n\t\t\t\t</button>\r\n\t\t\t\t<button type='submit'>Add Expense</button>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t);\r\n}\r\n","import React, { useState } from 'react';\r\nimport ExpenseForm from './ExpenseForm';\r\nimport styles from './NewExpense.module.css'; // css\r\n\r\nexport default function NewExpense(props) {\r\n\tconst [toggleForm, setToggleForm] = useState(false);\r\n\tconst saveExpenseDataHandler = (enteredExpenseData) => {\r\n\t\tconst expenseData = {\r\n\t\t\t...enteredExpenseData,\r\n\t\t\tid: Math.random().toString(),\r\n\t\t};\r\n\t\t// Passing data object to upper level component (-->App.js)\r\n\t\tprops.onAddExpense(expenseData);\r\n\t\tsetToggleForm(false);\r\n\t};\r\n\t// Helper to display input form\r\n\tconst displayFormHandler = () => {\r\n\t\tsetToggleForm((prevState) => !prevState);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className={styles['new-expense']}>\r\n\t\t\t{!toggleForm && (\r\n\t\t\t\t<button type='button' onClick={displayFormHandler}>\r\n\t\t\t\t\tAdd New Expense\r\n\t\t\t\t</button>\r\n\t\t\t)}\r\n\t\t\t{toggleForm && <ExpenseForm onSaveExpenseData={saveExpenseDataHandler} onCancel={displayFormHandler} />}\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React, { useState } from 'react';\r\nimport Expenses from './components/Expenses/Expenses';\r\nimport NewExpense from './components/NewExpense/NewExpense';\r\n\r\n// Array of objects with expenses\r\nconst INNITIAL_EXPENSES = [\r\n\t{\r\n\t\tid: 'e1', // identificator of object --> must be unique\r\n\t\ttitle: 'Mobile Charger', // expense title\r\n\t\tamount: 94.12, // expense price\r\n\t\tdate: new Date(2020, 7, 14), // date of bought\r\n\t},\r\n\t{ id: 'e2', title: 'Apple Iphone Xs', amount: 799.49, date: new Date(2021, 2, 12) },\r\n\t{\r\n\t\tid: 'e3',\r\n\t\ttitle: 'Health Insurance',\r\n\t\tamount: 294.67,\r\n\t\tdate: new Date(2021, 2, 28),\r\n\t},\r\n\t{\r\n\t\tid: 'e4',\r\n\t\ttitle: 'Asus laptop',\r\n\t\tamount: 1050,\r\n\t\tdate: new Date(2021, 5, 12),\r\n\t},\r\n];\r\n\r\nfunction App() {\r\n\tconst [expenses, setExpenses] = useState(INNITIAL_EXPENSES);\r\n\r\n\tconst addExpenseHandler = (expense) => {\r\n\t\t// Updating an Array / Object state based on a previous snapshot of that state\r\n\t\tsetExpenses((prevExpenses) => [expense, ...prevExpenses]);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<NewExpense onAddExpense={addExpenseHandler} />\r\n\t\t\t<Expenses items={expenses} />\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import ReactDOM from 'react-dom';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}