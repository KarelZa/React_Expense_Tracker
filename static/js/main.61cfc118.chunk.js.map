{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpenseFilter","onChange","event","onSelectYearData","target","value","defaultSelectedYear","ExpenseDate","month","date","toLocaleString","day","year","ExpenseItem","useState","title","setTitle","amount","onClick","console","log","Expenses","filteredYear","setFilteredYear","selectedYear","items","map","item","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","max","NewExpense","enteredExpenseData","id","Math","random","toString","onAddExpense","App","expenses","expense","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.61cfc118.chunk.js","sourcesContent":["import './Card.css'; // Css import\r\n\r\n// Card Wrapper(container) component - that generalize css look for components that will be inside\r\n// It acts like a shell\r\nexport default function Card(props) {\r\n\t// Because it is a Custom components , we need to tell it what is supported on this component\r\n\tconst classes = 'card ' + props.className; // classes of the shell --> props.className adds any new class to this component class list\r\n\t// Children is reserved keyword -- > It is all that is between opening & closing brackets of custom wrapper component (basically what is inside)\r\n\treturn <div className={classes}>{props.children}</div>;\r\n}\r\n","import React from 'react';\r\nimport './ExpensesFilter.css'; // css import\r\n\r\nexport default function ExpenseFilter(props) {\r\n\t// Helper function that changes selected Year, and passing data to parent component\r\n\tconst selectChangeHandler = (event) => {\r\n\t\tprops.onSelectYearData(event.target.value);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className='expenses-filter'>\r\n\t\t\t<div className='expenses-filter__control'>\r\n\t\t\t\t<label>Filter by year</label>\r\n\t\t\t\t<select onChange={selectChangeHandler} value={props.defaultSelectedYear}>\r\n\t\t\t\t\t<option value='2022'>2022</option>\r\n\t\t\t\t\t<option value='2021'>2021</option>\r\n\t\t\t\t\t<option value='2020'>2020</option>\r\n\t\t\t\t\t<option value='2019'>2019</option>\r\n\t\t\t\t</select>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import './ExpenseDate.css';\r\n\r\nexport default function ExpenseDate(props) {\r\n\t// Helper Variables\r\n\tconst month = props.date.toLocaleString('en-GB', { month: 'short' });\r\n\tconst day = props.date.toLocaleString('en-GB', { day: 'numeric' });\r\n\tconst year = props.date.toLocaleString('en-GB', { year: 'numeric' });\r\n\t//const year = props.date.getFullYear(); // Another method how to get fullYear\r\n\treturn (\r\n\t\t<div className='expense-date'>\r\n\t\t\t<div className='expense-date__month'>{month}</div>\r\n\t\t\t<div className='expense-date__year'>{year}</div>\r\n\t\t\t<div className='expense-date__day'>{day}</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n","// Imports\r\nimport './ExpenseItem.css';\r\nimport ExpenseDate from './ExpenseDate'; // Default import\r\nimport Card from '../UI/Card';\r\nimport React, { useState } from 'react'; // in curly bracers we imported useState function ( it is React Hook)\r\n\r\n// Component is basically a JS function - As parameter we pass props object ( that stores key:value pairs )\r\n// Props allows us passing data between components , it is key concept of React\r\n// Thanks to props we can have DYNAMIC REUSABLE components\r\nfunction ExpenseItem(props) {\r\n\t// useState Hook function --> returns array [] , can have default innitial value in ()\r\n\t// title = stores current state value, setTitle = function through you update the state\r\n\tconst [title, setTitle] = useState(props.title);\r\n\r\n\tconst clickHandler = () => {\r\n\t\tsetTitle('Updated'); // Calling this Updating function , will set a new value and MOST IMPORTANTLY runs the component function again!\r\n\t\tconsole.log(title); // It will show old value , but the new one is scheduled\r\n\t};\r\n\r\n\t// Return can have only 1 root div element\r\n\treturn (\r\n\t\t<Card className='expense-item'>\r\n\t\t\t<ExpenseDate date={props.date} /> {/* passing date from props to ExpenseDate component */}\r\n\t\t\t<div className='expense-item__description'>\r\n\t\t\t\t<h2>{title}</h2>\r\n\t\t\t\t<div className='expense-item__price'>${props.amount}</div>\r\n\t\t\t</div>\r\n\t\t\t{/* All onEvent handlers needs functions to execute */}\r\n\t\t\t<button onClick={clickHandler}>Change title</button>\r\n\t\t</Card>\r\n\t);\r\n}\r\n\r\n// Exporting it to another file\r\nexport default ExpenseItem;\r\n","// Imports\r\nimport React, { useState } from 'react';\r\nimport Card from '../UI/Card';\r\nimport ExpenseFilter from './ExpensesFilter';\r\nimport ExpenseItem from './ExpenseItem';\r\nimport './Expenses.css';\r\n\r\nexport default function Expenses(props) {\r\n\tconst [filteredYear, setFilteredYear] = useState('2021');\r\n\r\n\t// Helper function that updates filteredYear state , based on selected data from ExpenseFilter component\r\n\tconst selectYearDataHandler = (selectedYear) => {\r\n\t\tsetFilteredYear(selectedYear);\r\n\t\tconsole.log(selectedYear);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Card className='expenses'>\r\n\t\t\t{/* 2-Way binding --> defaultSelectedYear setting default Value in filter, onSelectYearData --> getting currently selected year data */}\r\n\t\t\t<ExpenseFilter defaultSelectedYear={filteredYear} onSelectYearData={selectYearDataHandler} />\r\n\t\t\t{/* Mapping ExpenseItem  */}\r\n\t\t\t{props.items.map((item) => (\r\n\t\t\t\t<ExpenseItem title={item.title} amount={item.amount} date={item.date} />\r\n\t\t\t))}\r\n\t\t</Card>\r\n\t);\r\n}\r\n","import React, { useState } from 'react';\r\nimport './ExpenseForm.css'; // css\r\n\r\nexport default function ExpenseForm(props) {\r\n\tconst [enteredTitle, setEnteredTitle] = useState('');\r\n\tconst [enteredAmount, setEnteredAmount] = useState('');\r\n\tconst [enteredDate, setEnteredDate] = useState('');\r\n\t// 2nd option - All states in one object\r\n\t// const [userInput, setUserInput] = useState({\r\n\t// \tenteredTitle: '',\r\n\t// \tenteredAmount: '',\r\n\t// \tenteredDate: '',\r\n\t// });\r\n\r\n\t// Helper function that stores entered title text into state(enteredTitle) --> so later we can use it\r\n\t// @event = object from which we get current text value, it is always a string type\r\n\tconst titleChangeHandler = (event) => {\r\n\t\tsetEnteredTitle(event.target.value);\r\n\t\t// 2nd option - All states in one object\r\n\t\t// Always use when state update depends on the previous state\r\n\t\t// setUserInput((prevState) => {\r\n\t\t// \t// ...prevState => Copy of the stateObject snapshot\r\n\t\t// \t// enteredTitle => updating only what should be updated\r\n\t\t// \treturn { ...prevState, enteredTitle: event.target.value };\r\n\t\t// });\r\n\t};\r\n\t// Helper function that stores entered Amount into state\r\n\tconst amountChangeHandler = (event) => {\r\n\t\tsetEnteredAmount(event.target.value);\r\n\t};\r\n\t// Helper function that stores entered Date into state\r\n\tconst dateChangeHandler = (event) => {\r\n\t\tsetEnteredDate(event.target.value);\r\n\t};\r\n\r\n\tconst submitHandler = (event) => {\r\n\t\tevent.preventDefault(); // Prevents reload of the page , when request is sent\r\n\t\t// Stores all the seperate states into one object\r\n\t\tconst expenseData = {\r\n\t\t\ttitle: enteredTitle,\r\n\t\t\tamount: enteredAmount,\r\n\t\t\tdate: new Date(enteredDate), // Converts String into Date format\r\n\t\t};\r\n\t\t// Passing data object to upper level component (-->NewExpense.js) , through props object that has method. --> check Child-to-Parent component communication\r\n\t\t// onSaveExpenseData will Now call saveExpenseDataHandler() , defined in NewExpense.js\r\n\t\tprops.onSaveExpenseData(expenseData);\r\n\t\t// Resets Input fields --> check two-way binding concept\r\n\t\tsetEnteredTitle('');\r\n\t\tsetEnteredAmount('');\r\n\t\tsetEnteredDate('');\r\n\t};\r\n\r\n\treturn (\r\n\t\t// Every form has onSubmit event , when submit button is clicked\r\n\t\t<form onSubmit={submitHandler}>\r\n\t\t\t<div className='new-expense__controls'>\r\n\t\t\t\t<div className='new-expense__control'>\r\n\t\t\t\t\t<label>Title</label>\r\n\t\t\t\t\t{/* \r\n                    Two-way Binding\r\n                    allows us not just to listen onto event , but let us pass a new value back into input when event happens\r\n                    */}\r\n\t\t\t\t\t<input type='text' value={enteredTitle} onChange={titleChangeHandler} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='new-expense__control'>\r\n\t\t\t\t\t<label>Amount</label>\r\n\t\t\t\t\t<input type='number' value={enteredAmount} min='0.01' step='0.01' onChange={amountChangeHandler} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='new-expense__control'>\r\n\t\t\t\t\t<label>Date</label>\r\n\t\t\t\t\t<input type='date' value={enteredDate} min='2019-01-01' max='2022-12-31' onChange={dateChangeHandler} />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className='new-expense__actions'>\r\n\t\t\t\t<button type='submit'>Add Expense</button>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t);\r\n}\r\n","// Imports\r\nimport React from 'react';\r\nimport ExpenseForm from './ExpenseForm';\r\nimport './NewExpense.css'; // css\r\n\r\nexport default function NewExpense(props) {\r\n\tconst saveExpenseDataHandler = (enteredExpenseData) => {\r\n\t\tconst expenseData = {\r\n\t\t\t...enteredExpenseData,\r\n\t\t\tid: Math.random().toString(),\r\n\t\t};\r\n\t\t// console.log(expenseData);\r\n\t\t// Passing data object to upper level component (-->App.js) , through props object that has method onAddExpense.\r\n\t\t// that points to a\tddExpenseHandler()\r\n\t\tprops.onAddExpense(expenseData);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className='new-expense'>\r\n\t\t\t{/* Child-Parent communication(passing data) through own event function */}\r\n\t\t\t<ExpenseForm onSaveExpenseData={saveExpenseDataHandler} />\r\n\t\t</div>\r\n\t);\r\n}\r\n","// Imports\nimport React from 'react'; // used in older projects\nimport Expenses from './components/Expenses/Expenses';\nimport NewExpense from './components/NewExpense/NewExpense';\n\n// It is so called root component , the main component that is rendered\nfunction App() {\n\t// Array of objects for ExpenseItem component\n\tconst expenses = [\n\t\t{\n\t\t\tid: 'e1', // identificator of object --> must be unique\n\t\t\ttitle: 'Mobile Charger', // expense title\n\t\t\tamount: 94.12, // expense price\n\t\t\tdate: new Date(2020, 7, 14), // date of bought\n\t\t},\n\t\t{ id: 'e2', title: 'New TV', amount: 799.49, date: new Date(2021, 2, 12) },\n\t\t{\n\t\t\tid: 'e3',\n\t\t\ttitle: 'Car Insurance',\n\t\t\tamount: 294.67,\n\t\t\tdate: new Date(2021, 2, 28),\n\t\t},\n\t\t{\n\t\t\tid: 'e4',\n\t\t\ttitle: 'New Desk (Wooden)',\n\t\t\tamount: 450,\n\t\t\tdate: new Date(2021, 5, 12),\n\t\t},\n\t];\n\n\tconst addExpenseHandler = (expense) => {\n\t\t// expenses.push(expenseData);\n\t\tconsole.log(expense);\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<NewExpense onAddExpense={addExpenseHandler} />\n\t\t\t{/* Own custom made component\n\t\t\t \titems is passing expenses array with data */}\n\t\t\t<Expenses items={expenses} />\n\t\t</div>\n\t);\n\n\t// Underlying code , was used in older projects --> needs import  React from 'react';\n\t// 1. arg = type of html element (if its custom made component you put that one)\n\t// 2. arg = data we are passing with props\n\t// 3. arg = Content of the element\n\t// return React.createElement(\n\t// \t'div',\n\t// \t{},\n\t// \tReact.createElement('h2', {}, \"Let's get started!\"),\n\t// \tReact.createElement(Expenses, { items: expenses })\n\t// );\n}\n\nexport default App;\n","// Index.js is the first file that is executed when page is loaded ... it is compiled by react dependencies\nimport ReactDOM from 'react-dom'; // ReactDOM is an imported Object from React library\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}